{
	"$schema": "http://json-schema.org/draft-07/schema",
	"allOf": [
		{
			"properties": {
				"minecraft:addrider": {
					"additionalProperties": false,
					"description": "Adds a rider to the entity. Requires minecraft:rideable.",
					"properties": {
						"entity_type": {
							"$ref": "../../general/vanilla/identifiers.json#/definitions/entity_identifiers"
						},
						"spawn_event": {
							"type": "string"
						}
					}
				},
				"minecraft:admire_item": {
					"additionalProperties": false,
					"description": "Causes the mob to ignore attackable targets for a given duration.",
					"properties": {
						"duration": {
							"type": "number"
						},
						"spawn_event": {
							"type": "string"
						}
					}
				},
				"minecraft:ageable": {
					"description": "Adds a timer for the entity to grow up. It can be accelerated by giving the entity the items it likes as defined by feedItems.",
					"properties": {
						"duration": {
							"type": "number"
						},
						"feed_items": {
							"type": "array",
							"items": {
								"properties": {
									"item": {
										"$ref": "../../general/vanilla/identifiers.json#/definitions/item_identifiers"
									},
									"growth": {
										"type": "number"
									}
								}
							}
						},
						"drop_items": {
							"type": "array",
							"items": {
								"$ref": "../../general/vanilla/identifiers.json#/definitions/item_identifiers"
							}
						},
						"grow_up": {
							"$ref": "../general/eventDefinition.json"
						}
					}
				},
				"minecraft:ambient_sound_interval": {
					"additionalProperties": false,
					"description": "Sets the entity's delay between playing its ambient sound.",
					"properties": {
						"range": {
							"type": "number"
						},
						"value": {
							"type": "number"
						},
						"event_name": {
							"type": "string"
						}
					}
				},
				"minecraft:angry": {
					"additionalProperties": false,
					"description": "Defines the entity's 'angry' state using a timer.",
					"properties": {
						"broadcast_anger": {
							"type": "boolean"
						},
						"broadcast_anger_on_attack": {
							"type": "boolean"
						},
						"broadcast_anger_on_being_attacked": {
							"type": "boolean"
						},
						"broadcast_range": {
							"type": "number"
						},
						"broadcast_filters": {
							"$ref": "../general/filter.json"
						},
						"filters": {
							"$ref": "../general/filter.json"
						},
						"broadcast_targets": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"calm_event": {
							"$ref": "../general/eventDefinition.json"
						},
						"duration": {
							"type": "number"
						},
						"duration_delta": {
							"type": "number"
						},
						"angry_sound": {
							"type": "string"
						},
						"sound_interval": {
							"additionalProperties": false,
							"properties": {
								"range_min": {
									"type": "number"
								},
								"range_max": {
									"type": "number"
								}
							}
						}
					}
				},
				"minecraft:area_attack": {
					"description": "A component that does damage to entities that get within range.",
					"additionalProperties": false,
					"properties": {
						"damage_range": {
							"type": "number"
						},
						"damage_per_tick": {
							"type": "number"
						},
						"cause": {
							"$ref": "../../general/vanilla/damageType.json"
						},
						"entity_filter": {
							"$ref": "../general/filter.json"
						}
					}
				},
				"minecraft:attack": {
					"description": "Defines an entity's melee attack and any additional effects on it.",
					"additionalProperties": false,
					"properties": {
						"damage": {
							"type": "number"
						},
						"effect_name": {
							"$ref": "../../general/vanilla/effectName.json"
						},
						"effect_duration": {
							"type": "number"
						}
					}
				},
				"minecraft:attack_cooldown": {
					"description": "Adds a cooldown to a mob. The intention of this cooldown is to be used to prevent the mob from attempting to aquire new attack targets.",
					"additionalProperties": false,
					"properties": {
						"attack_cooldown_time": {
							"anyOf": [
								{
									"type": "number"
								},
								{
									"type": "array",
									"minItems": 2,
									"maxItems": 2,
									"items": {
										"type": "number"
									}
								}
							]
						},
						"attack_cooldown_complete_event": {
							"$ref": "../general/eventDefinition.json"
						}
					}
				},
				"minecraft:attack_damage": {
					"description": "Defines an entity's melee attack damage.",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "number"
						}
					}
				},
				"minecraft:balloonable": {
					"description": "Whether or not this entity can be attatched to a balloon.",
					"properties": {
						"mass": {
							"type": "number"
						}
					}
				},
				"minecraft:barter": {
					"description": "Enables the component to drop an item as a barter exchange.",
					"additionalProperties": false,
					"properties": {
						"barter_table": {
							"type": "string"
						},
						"cooldown_after_being_attacked": {
							"type": "number"
						}
					}
				},
				"minecraft:block_sensor": {
					"description": "Fires off a specified event when a block in the block list is broken within the sensor range.",
					"additionalProperties": false,
					"properties": {
						"sensor_radius": {
							"type": "number"
						},
						"on_break": {
							"type": "array",
							"items": {
								"properties": {
									"block_list": {
										"type": "array",
										"items": {
											"$ref": "../../general/vanilla/identifiers.json#/definitions/block_identifiers"
										}
									},
									"on_block_broken": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"minecraft:boostable": {
					"description": "Defines the conditions and behavior of a rideable entity's boost.",
					"additionalProperties": false,
					"properties": {
						"speed_multiplier": {
							"type": "number"
						},
						"duration": {
							"type": "number"
						},
						"boost_items": {
							"type": "array",
							"items": {
								"properties": {
									"item": {
										"$ref": "../../general/vanilla/identifiers.json#/definitions/item_identifiers"
									},
									"item_damage": {
										"type": "number"
									},
									"replace_item": {
										"$ref": "../../general/vanilla/identifiers.json#/definitions/item_identifiers"
									}
								}
							}
						}
					}
				},
				"minecraft:boss": {
					"description": "The current state of the boss for updating the boss HUD.",
					"additionalProperties": false,
					"properties": {
						"should_darken_sky": {
							"type": "boolean"
						},
						"hud_range": {
							"type": "number"
						},
						"name": {
							"type": "string"
						}
					}
				},
				"minecraft:break_blocks": {
					"description": "Specifies the blocks that this entity can break as it moves around.",
					"additionalProperties": false,
					"properties": {
						"breakable_blocks": {
							"type": "array",
							"items": {
								"$ref": "../../general/vanilla/identifiers.json#/definitions/block_identifiers"
							}
						}
					}
				},
				"minecraft:breathable": {
					"description": "Defines what blocks this entity can breathe in and gives them the ability to suffocate.",
					"additionalProperties": false,
					"properties": {
						"breathe_blocks": {
							"type": "array",
							"items": {
								"$ref": "../../general/vanilla/identifiers.json#/definitions/block_identifiers"
							}
						},
						"breathes_water": {
							"type": "boolean"
						},
						"breathes_lava": {
							"type": "boolean"
						},
						"breathes_air": {
							"type": "boolean"
						},
						"breathes_solids": {
							"type": "boolean"
						},
						"generates_bubbles": {
							"type": "boolean"
						},
						"inhale_time": {
							"type": "number"
						},
						"suffocate_time": {
							"type": "number"
						},
						"total_supply": {
							"type": "number"
						},
						"non_breathe_blocks": {
							"type": "array",
							"items": {
								"$ref": "../../general/vanilla/identifiers.json#/definitions/block_identifiers"
							}
						}
					}
				},
				"minecraft:buoyant": {
					"description": "Enables an entity to float on the specified liquid blocks.",
					"additionalProperties": false,
					"properties": {
						"apply_gravity": {
							"type": "boolean"
						},
						"base_buoyancy": {
							"type": "number"
						},
						"big_wave_probablity": {
							"type": "number"
						},
						"big_wave_speed": {
							"type": "number"
						},
						"drag_down_on_buoyancy_removed": {
							"type": "number"
						},
						"liquid_blocks": {
							"type": "array",
							"items": {
								"$ref": "../../general/vanilla/identifiers.json#/definitions/block_identifiers"
							}
						},
						"simulate_waves": {
							"type": "boolean"
						}
					}
				},
				"minecraft:breedable": {
					"description": "Defines the way an entity can get into the 'love' state.",
					"properties": {
						"allow_sitting": {
							"type": "boolean"
						},
						"blend_attributes": {
							"type": "boolean"
						},
						"breed_cooldown": {
							"type": "number"
						},
						"love_filters": {
							"$ref": "../general/filter.json"
						},
						"breed_items": {
							"type": "array",
							"items": {
								"anyOf": [
									{
										"$ref": "../../general/vanilla/identifiers.json#/definitions/item_identifiers"
									}
								]
							}
						},
						"breeds_with": {
							"properties": {
								"mate_type": {
									"$ref": "../../general/vanilla/identifiers.json#/definitions/entity_identifiers"
								},
								"baby_type": {
									"$ref": "../../general/vanilla/identifiers.json#/definitions/entity_identifiers"
								},
								"breed_event": {
									"$ref": "../general/eventDefinition.json"
								}
							}
						},
						"causes_pregnancy": {
							"type": "boolean"
						},
						"environment_requirements": {
							"type": "array",
							"items": {
								"properties": {
									"blocks": {
										"$ref": "../../general/vanilla/identifiers.json#/definitions/block_identifiers"
									},
									"count": {
										"type": "number"
									},
									"radius": {
										"type": "number"
									}
								}
							}
						},
						"extra_baby_chance": {
							"type": "number"
						},
						"inherit_tamed": {
							"type": "boolean"
						},
						"mutation_factor": {
							"properties": {
								"color": {
									"type": "number"
								},
								"extra_variant": {
									"type": "number"
								},
								"variant": {
									"type": "number"
								}
							}
						},
						"deny_parents_variant": {
							"properties": {
								"chance": {
									"type": "number"
								},
								"min_variant": {
									"type": "number"
								},
								"max_variant": {
									"type": "number"
								}
							}
						},
						"require_tame": {
							"type": "boolean"
						},
						"require_full_health": {
							"type": "boolean"
						}
					}
				},
				"minecraft:bribeable": {
					"description": "Defines the way an entity can get into the 'bribed' state.",
					"properties": {
						"bribe_cooldown": {
							"type": "number"
						},
						"bribe_items": {
							"anyOf": [
								{
									"$ref": "../../general/vanilla/identifiers.json#/definitions/item_identifiers"
								}
							]
						}
					}
				},
				"minecraft:burns_in_daylight": {
					"description": "Specifies if/how a mob burns in daylight."
				},
				"minecraft:can_climb": {
					"description": "Allows this entity to climb up ladders."
				},
				"minecraft:can_fly": {
					"description": "Marks the entity as being able to fly, the pathfinder won't be restricted to paths where a solid block is required underneath it.",
					"type": "boolean"
				},
				"minecraft:celebrate_hunt": {
					"description": "Specifies hunt celebration behaviour.",
					"additionalProperties": false,
					"properties": {
						"celebration_targets": {
							"$ref": "../general/filter.json"
						},
						"broadcast": {
							"type": "boolean"
						},
						"duration": {
							"type": "number"
						},
						"radius": {
							"type": "number"
						},
						"celebrate_sound": {
							"type": "string"
						},
						"sound_interval": {
							"properties": {
								"range_min": {
									"type": "number"
								},
								"range_max": {
									"type": "number"
								}
							}
						}
					}
				},
				"minecraft:collision_box": {
					"description": "Sets the width and height of the Entity's collision box.",
					"additionalProperties": false,
					"properties": {
						"width": {
							"type": "number"
						},
						"height": {
							"type": "number"
						}
					}
				},
				"minecraft:color": {
					"description": "Defines the entity's color. Only works on vanilla entities that have predefined color values (sheep, llama, shulker).",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "integer"
						}
					}
				},
				"minecraft:color2": {
					"description": "Defines the entity's second texture color. Only works on vanilla entities that have a second predefined color values (tropical fish).",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "integer"
						}
					}
				},
				"minecraft:custom_hit_test": {
					"description": "List of hitboxes for melee and ranged hits against the entity.",
					"additionalProperties": false,
					"properties": {
						"hitboxes": {
							"type": "array",
							"items": {
								"properties": {
									"width": {
										"type": "number"
									},
									"height": {
										"type": "number"
									},
									"pivot": {
										"type": "array",
										"minItems": 3,
										"maxItems": 3,
										"items": {
											"type": "number"
										}
									}
								}
							}
						}
					}
				},
				"minecraft:damage_over_time": {
					"description": "Applies defined amount of damage to the entity at specified intervals.",
					"additionalProperties": false,
					"properties": {
						"damage_per_hurt": {
							"type": "number"
						},
						"time_between_hurt": {
							"type": "number"
						}
					}
				},
				"minecraft:damage_sensor": {
					"description": "Defines what events to call when this entity is damaged by specific entities or items.",
					"additionalProperties": false,
					"properties": {
						"triggers": {
							"type": "array",
							"items": {
								"properties": {
									"on_damage": {
										"$ref": "../general/eventDefinition.json"
									},
									"cause": {
										"$ref": "../../general/vanilla/damageType.json"
									},
									"deals_damage": {
										"type": "boolean"
									},
									"damage_multiplier": {
										"type": "number"
									},
									"on_damage_sound_event": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"minecraft:default_look_angle": {
					"description": "Sets this entity's default head rotation angle.",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "number"
						}
					}
				},
				"minecraft:despawn": {
					"description": "Despawns the Actor when the despawn rules or optional filters evaluate to true.",
					"additionalProperties": false,
					"properties": {
						"remove_child_entities": {
							"type": "boolean"
						},
						"filters": {
							"$ref": "../general/filter.json"
						},
						"despawn_from_distance": {
							"additionalProperties": false,
							"properties": {
								"max_distance": {
									"type": "number"
								},
								"min_distance": {
									"type": "number"
								}
							}
						},
						"despawn_from_chance": {
							"type": "boolean"
						},
						"despawn_from_inactivity": {
							"type": "boolean"
						},
						"despawn_from_simulation_edge": {
							"type": "boolean"
						},
						"min_range_inactivity_timer": {
							"type": "number"
						},
						"min_range_random_chance": {
							"type": "number"
						}
					}
				},
				"minecraft:dweller": {
					"description": "Defines the entity as a dweller in a village",
					"additionalProperties": false,
					"properties": {
						"dwelling_type": {
							"const": "village",
							"type": "string"
						},
						"dweller_role": {
							"type": "string",
							"enum": ["hostile", "inhabitant", "defender"]
						},
						"update_interval_base": {
							"type": "number"
						},
						"update_interval_variant": {
							"type": "number"
						},
						"can_find_poi": {
							"type": "boolean"
						},
						"can_migrate": {
							"type": "boolean"
						},
						"first_founding_reward": {
							"type": "number"
						},
						"preferred_profession": {
							"type": "string",
							"enum": [
								"farmer",
								"fisherman",
								"shepard",
								"fletcher",
								"librarian",
								"cartographer",
								"cleric",
								"armorer",
								"weaponsmith",
								"toolsmith",
								"butcher",
								"leatherworker",
								"mason"
							]
						}
					}
				},
				"minecraft:economy_trade_table": {
					"description": "Defines this entity's ability to trade with players.",
					"additionalProperties": false,
					"properties": {
						"display_name": {
							"type": "string"
						},
						"table": {
							"type": "string"
						},
						"new_screen": {
							"type": "boolean"
						},
						"hero_demand_discount": {
							"type": "number"
						},
						"persist_trades": {
							"type": "boolean"
						},
						"convert_trades_economy": {
							"type": "boolean"
						},
						"cured_discount": {
							"type": "array",
							"minItems": 2,
							"maxItems": 2,
							"items": {
								"type": "number"
							}
						},
						"max_cured_discount": {
							"type": "array",
							"minItems": 2,
							"maxItems": 2,
							"items": {
								"type": "number"
							}
						},
						"nearby_cured_discount": {
							"type": "number"
						},
						"show_trade_screen": {
							"type": "boolean"
						}
					}
				},
				"minecraft:environment_sensor": {
					"description": "Creates a trigger based on environment conditions.",
					"additionalProperties": false,
					"properties": {
						"triggers": {
							"type": "array",
							"items": {
								"$ref": "../general/eventDefinition.json"
							}
						}
					}
				},
				"minecraft:entity_sensor": {
					"description": "A component that fires an event when a set of conditions are met by other entities within the defined range.",
					"additionalProperties": false,
					"properties": {
						"sensor_range": {
							"type": "number"
						},
						"minimum_count": {
							"type": "number"
						},
						"maximum_count": {
							"type": "number"
						},
						"relative_range": {
							"type": "boolean"
						},
						"require_all": {
							"type": "boolean"
						},
						"event_filters": {
							"$ref": "../general/filter.json"
						},
						"event": {
							"type": "string"
						}
					}
				},
				"minecraft:equipment": {
					"description": "Sets the Equipment table to use for this Entity.",
					"additionalProperties": false,
					"properties": {
						"table": {
							"type": "string"
						},
						"slot_drop_chance": {
							"type": "array",
							"items": {
								"properties": {
									"slot": {
										"$ref": "../../general/slotType.json"
									},
									"drop_chance": {
										"type": "number"
									}
								}
							}
						}
					}
				},
				"minecraft:equip_item": {
					"description": "The entity puts on the desired equipment."
				},
				"minecraft:equippable": {
					"description": "Defines an entity's behavior for having items equipped to it.",
					"properties": {
						"slots": {
							"type": "array",
							"items": {
								"properties": {
									"accepted_items": {
										"type": "array",
										"items": {
											"anyOf": [
												{
													"$ref": "../../general/vanilla/identifiers.json#/definitions/item_identifiers"
												}
											]
										}
									},
									"interact_text": {
										"type": "string"
									},
									"item": {
										"$ref": "../../general/vanilla/identifiers.json#/definitions/item_identifiers"
									},
									"on_equip": {
										"$ref": "../general/eventDefinition.json"
									},
									"on_unequip": {
										"$ref": "../general/eventDefinition.json"
									},
									"slot": {
										"type": "number"
									}
								}
							}
						}
					}
				},
				"minecraft:experience_reward": {
					"description": "Defines the experience dropped by the entity.",
					"additionalProperties": false,
					"properties": {
						"on_bred": {
							"$ref": "../../molang/embeddedBeta.json"
						},
						"on_death": {
							"$ref": "../../molang/embeddedBeta.json"
						}
					}
				},
				"minecraft:explode": {
					"description": "Defines how the entity explodes.",
					"additionalProperties": false,
					"properties": {
						"fuse_length": {
							"anyOf": [
								{
									"type": "number"
								},
								{
									"type": "array",
									"minItems": 2,
									"maxItems": 2,
									"items": {
										"type": "number"
									}
								}
							]
						},
						"power": {
							"type": "number"
						},
						"max_resistance": {
							"type": "number"
						},
						"fuse_lit": {
							"type": "boolean"
						},
						"causes_fire": {
							"type": "boolean"
						},
						"breaks_blocks": {
							"type": "boolean"
						},
						"fire_affected_by_griefing": {
							"type": "boolean"
						},
						"destroy_affected_by_griefing": {
							"type": "boolean"
						},
						"allow_damage_underwater": {
							"type": "boolean"
						}
					}
				},
				"minecraft:fire_immune": {
					"description": "Sets that this entity doesn't take damage from fire.",
					"type": "boolean",
					"additionalProperties": false
				},
				"minecraft:floats_in_liquid": {
					"additionalProperties": false,
					"description": "Sets that this entity can float in liquid blocks."
				},
				"minecraft:flocking": {
					"description": "Allows entities to flock in groups in water or not.",
					"additionalProperties": false,
					"properties": {
						"in_water": {
							"type": "boolean"
						},
						"match_variants": {
							"type": "boolean"
						},
						"use_center_of_mass": {
							"type": "boolean"
						},
						"low_flock_limit": {
							"type": "number"
						},
						"high_flock_limit": {
							"type": "number"
						},
						"goal_weight": {
							"type": "number"
						},
						"loner_chance": {
							"type": "number"
						},
						"influence_raidus": {
							"type": "number"
						},
						"breach_influence": {
							"type": "number"
						},
						"separation_weight": {
							"type": "string"
						},
						"separation_threshold": {
							"type": "number"
						},
						"cohesion_weight": {
							"type": "number"
						},
						"cohesion_threshold": {
							"type": "number"
						},
						"inner_cohesion_threshold": {
							"type": "number"
						},
						"min_height": {
							"type": "number"
						},
						"max_height": {
							"type": "number"
						},
						"block_distance": {
							"type": "number"
						},
						"block_weight": {
							"type": "number"
						}
					}
				},
				"minecraft:flying_speed": {
					"description": "Speed in Blocks that this entity flies at.",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "number"
						}
					}
				},
				"minecraft:follow_range": {
					"description": "The follow range for the entity.",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "number"
						},
						"max": {
							"type": "number"
						}
					}
				},
				"minecraft:foot_size": {
					"DoNotSuggest": true,
					"description": "**DEPRECATED** Sets the number of blocks the entity can step without jumping.",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "number"
						}
					}
				},
				"minecraft:friction_modifier": {
					"description": "Defines how much friction affects this entity.",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "number"
						}
					}
				},
				"minecraft:genetics": {
					"description": "Defines the way a mob's genes and alleles are passed on to it's offspring, and how those traits manifest in the child. Compatible parent genes are crossed together, the alleles are handed down from the parents to the child, and any matching genetic variants fire off JSON events to modify the child and express the traits.",
					"additionalProperties": false,
					"properties": {
						"mutation_rate": {
							"type": "number"
						},
						"genes": {
							"type": "array",
							"items": {
								"properties": {
									"name": {
										"type": "string"
									},
									"allele_range": {
										"type": "number"
									},
									"genetic_variants": {
										"type": "array",
										"items": {
											"properties": {
												"main_allele": {
													"type": "number"
												},
												"both_allele": {
													"type": "number"
												},
												"hidden_allele": {
													"type": "number"
												},
												"either_allele": {
													"type": "number"
												},
												"birth_event": {
													"$ref": "../general/eventDefinition.json"
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"minecraft:giveable": {
					"description": "Defines sets of items that can be used to trigger events when used on this entity. The item will also be taken and placed in the entity's inventory.",
					"properties": {
						"triggers": {
							"type": "array",
							"items": {
								"properties": {
									"cooldown": {
										"type": "number"
									},
									"items": {
										"type": "array",
										"items": {
											"anyOf": [
												{
													"$ref": "../../general/vanilla/identifiers.json#/definitions/item_identifiers"
												}
											]
										}
									},
									"on_give": {
										"$ref": "../general/eventDefinition.json"
									}
								}
							}
						}
					}
				},
				"minecraft:ground_offset": {
					"description": "Sets the offset from the ground that the entity is actually at.",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "number"
						}
					}
				},
				"minecraft:group_size": {
					"description": "Keeps track of entity group size in the given radius.",
					"additionalProperties": false,
					"properties": {
						"radius": {
							"type": "number"
						},
						"filters": {
							"$ref": "../general/filter.json"
						}
					}
				},
				"minecraft:grows_crop": {
					"description": "Could increase crop growth when entity walks over crop",
					"additionalProperties": false,
					"properties": {
						"charges": {
							"type": "number"
						},
						"chance": {
							"type": "number"
						}
					}
				},
				"minecraft:healable": {
					"description": "Defines the interactions with this entity for healing it.",
					"properties": {
						"force_use": {
							"type": "boolean"
						},
						"filters": {
							"$ref": "../general/filter.json"
						},
						"items": {
							"type": "array",
							"items": {
								"properties": {
									"item": {
										"anyOf": [
											{
												"$ref": "../../general/vanilla/identifiers.json#/definitions/item_identifiers"
											}
										]
									},
									"heal_amount": {
										"type": "number"
									},
									"filters": {
										"$ref": "../general/filter.json"
									},
									"effects": {
										"type": "array",
										"items": {
											"properties": {
												"name": {
													"$ref": "../../general/vanilla/effectName.json"
												},
												"chance": {
													"type": "number"
												},
												"duration": {
													"type": "number"
												},
												"amplifier": {
													"type": "number"
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"minecraft:health": {
					"description": "Sets the health for the entity.",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "number"
						},
						"max": {
							"type": "number"
						},
						"min": {
							"type": "number"
						}
					}
				},
				"minecraft:hide": {
					"additionalProperties": false
				},
				"minecraft:home": {
					"description": "Saves a home pos for when the the entity is spawned."
				},
				"minecraft:horse.jump_strength": {
					"description": "Sets the strength of the entity's jump.",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "number"
						}
					}
				},
				"minecraft:hurt_on_condition": {
					"description": "Defines a set of conditions under which an entity should take damage.",
					"additionalProperties": false,
					"properties": {
						"damage_conditions": {
							"type": "array",
							"items": {
								"properties": {
									"filters": {
										"$ref": "../general/filter.json"
									},
									"cause": {
										"$ref": "../../general/vanilla/damageType.json"
									},
									"damage_per_tick": {
										"type": "number"
									}
								}
							}
						}
					}
				},
				"minecraft:input_ground_controlled": {
					"description": "When configured as a rideable entity, the entity will be controlled using WASD controls.",
					"additionalProperties": false
				},
				"minecraft:insomnia": {
					"description": "Adds a timer since last rested to see if phantoms should spawn.",
					"additionalProperties": false,
					"properties": {
						"days_until_insomnia": {
							"type": "number"
						}
					}
				},
				"minecraft:instant_despawn": {
					"description": "Despawns the Actor immediately.",
					"additionalProperties": false,
					"properties": {
						"remove_child_entities": {
							"type": "boolean"
						}
					}
				},
				"minecraft:interact": {
					"description": "Defines interactions with this entity.",
					"additionalProperties": false,
					"properties": {
						"interactions": {
							"type": "array",
							"items": {
								"properties": {
									"add_items": {
										"properties": {
											"table": {
												"type": "string"
											}
										}
									},
									"cooldown": {
										"type": "number"
									},
									"hurt_item": {
										"type": "number"
									},
									"interact_text": {
										"type": "string"
									},
									"on_interact": {
										"$ref": "../general/eventDefinition.json"
									},
									"particle_on_start": {
										"$ref": "../general/particleDefinition.json"
									},
									"play_sounds": {
										"type": "string"
									},
									"spawn_entities": {
										"type": "array",
										"items": {
											"$ref": "../../general/vanilla/identifiers.json#/definitions/entity_identifiers"
										}
									},
									"spawn_items": {
										"properties": {
											"table": {
												"type": "string"
											}
										}
									},
									"swing": {
										"type": "boolean"
									},
									"transform_to_item": {
										"$ref": "../../general/vanilla/identifiers.json#/definitions/item_identifiers"
									},
									"barter": {
										"type": "boolean"
									},
									"admire": {
										"type": "boolean"
									},
									"use_item": {
										"type": "boolean"
									}
								}
							}
						}
					}
				},
				"minecraft:inventory": {
					"description": "Defines this entity's inventory properties.",
					"additionalProperties": false,
					"properties": {
						"additional_slots_per_strength": {
							"type": "number"
						},
						"can_be_siphoned_from": {
							"type": "boolean"
						},
						"conatiner_type": {
							"$ref": "../../general/inventoryType.json"
						},
						"inventory_size": {
							"type": "number"
						},
						"private": {
							"type": "boolean"
						},
						"restrict_to_owner": {
							"type": "boolean"
						}
					}
				},
				"minecraft:is_baby": {
					"description": "Sets that this entity is a baby.",
					"additionalProperties": false
				},
				"minecraft:is_charged": {
					"description": "Sets that this entity is charged.",
					"additionalProperties": false
				},
				"minecraft:is_chested": {
					"description": "Sets that this entity is currently carrying a chest.",
					"additionalProperties": false
				},
				"minecraft:is_dyeable": {
					"description": "Allows dyes to be used on this entity to change its color.",
					"additionalProperties": false,
					"properties": {
						"interact_text": {
							"type": "string"
						}
					}
				},
				"minecraft:is_hidden_when_invisible": {
					"description": "Sets that this entity can hide from hostile mobs while invisible.",
					"additionalProperties": false
				},
				"minecraft:is_ignited": {
					"description": "Sets that this entity is currently on fire.",
					"additionalProperties": false
				},
				"minecraft:is_illager_captain": {
					"description": "Sets that this entity is an illager captain.",
					"additionalProperties": false
				},
				"minecraft:is_saddled": {
					"description": "Sets that this entity is currently saddled.",
					"additionalProperties": false
				},
				"minecraft:is_shaking": {
					"description": "Sets that this entity is currently shaking.",
					"additionalProperties": false
				},
				"minecraft:is_sheared": {
					"description": "Sets that this entity is currently sheared.",
					"additionalProperties": false
				},
				"minecraft:is_stackable": {
					"description": "Sets that this entity can be stacked.",
					"additionalProperties": false
				},
				"minecraft:is_stunned": {
					"description": "Sets that this entity is currently stunned.",
					"additionalProperties": false
				},
				"minecraft:is_tamed": {
					"description": "Sets that this entity is currently tamed.",
					"additionalProperties": false
				},
				"minecraft:item_controllable": {
					"description": "Defines what items can be used to control this entity while ridden.",
					"additionalProperties": false,
					"properties": {
						"control_items": {
							"type": "array",
							"items": {
								"$ref": "../../general/vanilla/identifiers.json#/definitions/item_identifiers"
							}
						}
					}
				},
				"minecraft:item_hopper": {
					"description": "Determines that this entity is an item hopper.",
					"additionalProperties": false
				},
				"minecraft:jump.static": {
					"description": "Gives the entity the ability to jump.",
					"additionalProperties": false,
					"properties": {
						"jump_power": {
							"type": "number"
						}
					}
				},
				"minecraft:jump.dynamic": {
					"description": "Defines a dynamic type jump control that will change jump properties based on the speed modifier of the mob.",
					"additionalProperties": false
				},
				"minecraft:knockback_resistance": {
					"description": "Gives the entity resistance to knockback.",
					"additionalProperties": false
				},
				"minecraft:lava_movement": {
					"description": "Sets the movement speed of the entity in lava.",
					"additionalProperties": false
				},
				"minecraft:leashable": {
					"description": "Allows this entity to be leashed and defines the conditions and events for this entity when is leashed.",
					"additionalProperties": false,
					"properties": {
						"soft_distance": {
							"type": "number"
						},
						"hard_distance": {
							"type": "number"
						},
						"max_distance": {
							"type": "number"
						},
						"on_leash": {
							"$ref": "../general/eventDefinition.json"
						},
						"on_unleash": {
							"$ref": "../general/eventDefinition.json"
						},
						"can_be_stolen": {
							"type": "boolean"
						}
					}
				},
				"minecraft:lookat": {
					"description": "Defines the behavior when another entity looks at this entity.",
					"additionalProperties": false,
					"properties": {
						"search_radius": {
							"type": "number"
						},
						"set_target": {
							"type": "boolean"
						},
						"look_cooldown": {
							"type": "number"
						},
						"filters": {
							"$ref": "../general/filter.json"
						},
						"look_event": {
							"$ref": "../general/eventDefinition.json"
						},
						"allow_invulnerable": {
							"type": "boolean"
						}
					}
				},
				"minecraft:loot": {
					"description": "Sets the loot table for what items this entity drops upon death.",
					"additionalProperties": false,
					"properties": {
						"table": {
							"type": "string"
						}
					}
				},
				"minecraft:managed_wandering_trader": {
					"description": "This component is used to implement part of the Wandering Trader behavior.",
					"additionalProperties": false
				},
				"minecraft:mark_variant": {
					"description": "Additional variant value. Can be used to further differentiate variants.",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "number"
						}
					}
				},
				"minecraft:mob_effect": {
					"description": "A component that applies a mob effect to entities that get within range.",
					"additionalProperties": false,
					"properties": {
						"effect_range": {
							"type": "number"
						},
						"mob_effect": {
							"$ref": "../../general/vanilla/effectName.json"
						},
						"effect_time": {
							"type": "number"
						},
						"entity_filter": {
							"$ref": "../general/filter.json"
						}
					}
				},
				"minecraft:movement": {
					"description": "Defines the movement speed for the entity.",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "number"
						}
					}
				},
				"minecraft:movement.amphibious": {
					"description": "This move control allows the mob to swim in water and walk on land.",
					"additionalProperties": false,
					"properties": {
						"max_turn": {
							"$ref": "../../general/degree.json"
						}
					}
				},
				"minecraft:movement.basic": {
					"description": "This component accents the movement of an entity.",
					"additionalProperties": false,
					"properties": {
						"max_turn": {
							"$ref": "../../general/degree.json"
						}
					}
				},
				"minecraft:movement.fly": {
					"description": "This move control causes the mob to fly.",
					"additionalProperties": false,
					"properties": {
						"max_turn": {
							"$ref": "../../general/degree.json"
						}
					}
				},
				"minecraft:movement.generic": {
					"description": "This move control allows a mob to fly, swim, climb, etc.",
					"additionalProperties": false,
					"properties": {
						"max_turn": {
							"$ref": "../../general/degree.json"
						}
					}
				},
				"minecraft:movement.hover": {
					"description": "This move control causes the mob to hover.",
					"additionalProperties": false,
					"properties": {
						"max_turn": {
							"$ref": "../../general/degree.json"
						}
					}
				},
				"minecraft:movement.jump": {
					"description": "Move control that causes the mob to jump as it moves with a specified delay between jumps.",
					"additionalProperties": false,
					"properties": {
						"max_turn": {
							"$ref": "../../general/degree.json"
						},
						"jump_delay": {
							"type": "array",
							"minItems": 2,
							"maxItems": 2,
							"items": {
								"type": "number"
							}
						}
					}
				},
				"minecraft:movement.glide": {
					"description": "This move causes the mob to glide.",
					"additionalProperties": false,
					"properties": {
						"max_turn": {
							"$ref": "../../general/degree.json"
						},
						"start_speed": {
							"type": "number"
						},
						"speed_when_turning": {
							"type": "number"
						}
					}
				},
				"minecraft:skin_id": {
					"description": "Skin ID value. Can be used to differentiate skins, such as base skins for villagers.",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "number"
						}
					}
				},
				"minecraft:movement.skip": {
					"description": "This move control causes the mob to hop as it moves.",
					"additionalProperties": false,
					"properties": {
						"max_turn": {
							"$ref": "../../general/degree.json"
						}
					}
				},
				"minecraft:movement.sway": {
					"description": "This move control causes the mob to sway side to side giving the impression it is swimming.",
					"additionalProperties": false,
					"properties": {
						"max_turn": {
							"$ref": "../../general/degree.json"
						},
						"sway_amplitude": {
							"type": "number"
						}
					}
				},
				"minecraft:nameable": {
					"description": "Allows this entity to be named (e.g. using a name tag).",
					"additionalProperties": false,
					"properties": {
						"allow_name_tag_renaming": {
							"type": "boolean"
						},
						"always_show": {
							"type": "boolean"
						},
						"default_trigger": {
							"$ref": "../general/eventDefinition.json"
						},
						"name_actions": {
							"type": "array",
							"items": {
								"properties": {
									"name_filter": {
										"type": "string"
									},
									"on_named": {
										"$ref": "../general/eventDefinition.json"
									}
								}
							}
						}
					}
				},
				"minecraft:navigation.climb": {
					"description": "Allows this entity to generate paths that include vertical walls like the vanilla Spiders do.",
					"properties": {
						"is_amphibious": {
							"type": "boolean"
						},
						"avoid_portals": {
							"type": "boolean"
						},
						"avoid_sun": {
							"type": "boolean"
						},
						"avoid_water": {
							"type": "boolean"
						},
						"avoid_damage_blocks": {
							"type": "boolean"
						},
						"can_break_doors": {
							"type": "boolean"
						},
						"can_open_doors": {
							"type": "boolean"
						},
						"can_pass_doors": {
							"type": "boolean"
						},
						"can_pass_over_water": {
							"type": "boolean"
						},
						"can_pass_over_lava": {
							"type": "boolean"
						},
						"can_path_from_air": {
							"type": "boolean"
						},
						"can_sink": {
							"type": "boolean"
						},
						"can_walk_in_lava": {
							"type": "boolean"
						}
					}
				},
				"minecraft:navigation.float": {
					"description": "Allows this entity to generate paths that include vertical walls like the vanilla Spiders do.",
					"properties": {
						"is_amphibious": {
							"type": "boolean"
						},
						"avoid_portals": {
							"type": "boolean"
						},
						"avoid_sun": {
							"type": "boolean"
						},
						"avoid_water": {
							"type": "boolean"
						},
						"avoid_damage_blocks": {
							"type": "boolean"
						},
						"can_break_doors": {
							"type": "boolean"
						},
						"can_open_doors": {
							"type": "boolean"
						},
						"can_pass_doors": {
							"type": "boolean"
						},
						"can_pass_over_water": {
							"type": "boolean"
						},
						"can_pass_over_lava": {
							"type": "boolean"
						},
						"can_path_from_air": {
							"type": "boolean"
						},
						"can_sink": {
							"type": "boolean"
						},
						"can_walk_in_lava": {
							"type": "boolean"
						}
					}
				},
				"minecraft:navigation.fly": {
					"description": "Allows this entity to generate paths that include vertical walls like the vanilla Spiders do.",
					"properties": {
						"is_amphibious": {
							"type": "boolean"
						},
						"avoid_portals": {
							"type": "boolean"
						},
						"avoid_sun": {
							"type": "boolean"
						},
						"avoid_water": {
							"type": "boolean"
						},
						"avoid_damage_blocks": {
							"type": "boolean"
						},
						"can_break_doors": {
							"type": "boolean"
						},
						"can_open_doors": {
							"type": "boolean"
						},
						"can_pass_doors": {
							"type": "boolean"
						},
						"can_pass_over_water": {
							"type": "boolean"
						},
						"can_pass_over_lava": {
							"type": "boolean"
						},
						"can_path_from_air": {
							"type": "boolean"
						},
						"can_sink": {
							"type": "boolean"
						},
						"can_walk_in_lava": {
							"type": "boolean"
						}
					}
				},
				"minecraft:navigation.generic": {
					"description": "Allows this entity to generate paths that include vertical walls like the vanilla Spiders do.",
					"properties": {
						"is_amphibious": {
							"type": "boolean"
						},
						"avoid_portals": {
							"type": "boolean"
						},
						"avoid_sun": {
							"type": "boolean"
						},
						"avoid_water": {
							"type": "boolean"
						},
						"avoid_damage_blocks": {
							"type": "boolean"
						},
						"can_break_doors": {
							"type": "boolean"
						},
						"can_open_doors": {
							"type": "boolean"
						},
						"can_pass_doors": {
							"type": "boolean"
						},
						"can_pass_over_water": {
							"type": "boolean"
						},
						"can_pass_over_lava": {
							"type": "boolean"
						},
						"can_path_from_air": {
							"type": "boolean"
						},
						"can_sink": {
							"type": "boolean"
						},
						"can_walk_in_lava": {
							"type": "boolean"
						}
					}
				},
				"minecraft:navigation.hover": {
					"description": "Allows this entity to generate paths that include vertical walls like the vanilla Spiders do.",
					"properties": {
						"is_amphibious": {
							"type": "boolean"
						},
						"avoid_portals": {
							"type": "boolean"
						},
						"avoid_sun": {
							"type": "boolean"
						},
						"avoid_water": {
							"type": "boolean"
						},
						"avoid_damage_blocks": {
							"type": "boolean"
						},
						"can_break_doors": {
							"type": "boolean"
						},
						"can_open_doors": {
							"type": "boolean"
						},
						"can_pass_doors": {
							"type": "boolean"
						},
						"can_pass_over_water": {
							"type": "boolean"
						},
						"can_pass_over_lava": {
							"type": "boolean"
						},
						"can_path_from_air": {
							"type": "boolean"
						},
						"can_sink": {
							"type": "boolean"
						},
						"can_walk_in_lava": {
							"type": "boolean"
						}
					}
				},
				"minecraft:navigation.swim": {
					"description": "Allows this entity to generate paths that include vertical walls like the vanilla Spiders do.",
					"properties": {
						"is_amphibious": {
							"type": "boolean"
						},
						"avoid_portals": {
							"type": "boolean"
						},
						"avoid_sun": {
							"type": "boolean"
						},
						"avoid_water": {
							"type": "boolean"
						},
						"avoid_damage_blocks": {
							"type": "boolean"
						},
						"can_break_doors": {
							"type": "boolean"
						},
						"can_open_doors": {
							"type": "boolean"
						},
						"can_pass_doors": {
							"type": "boolean"
						},
						"can_pass_over_water": {
							"type": "boolean"
						},
						"can_pass_over_lava": {
							"type": "boolean"
						},
						"can_path_from_air": {
							"type": "boolean"
						},
						"can_sink": {
							"type": "boolean"
						},
						"can_walk_in_lava": {
							"type": "boolean"
						}
					}
				},
				"minecraft:navigation.walk": {
					"description": "Allows this entity to generate paths that include vertical walls like the vanilla Spiders do.",
					"properties": {
						"is_amphibious": {
							"type": "boolean"
						},
						"avoid_portals": {
							"type": "boolean"
						},
						"avoid_sun": {
							"type": "boolean"
						},
						"avoid_water": {
							"type": "boolean"
						},
						"avoid_damage_blocks": {
							"type": "boolean"
						},
						"can_break_doors": {
							"type": "boolean"
						},
						"can_open_doors": {
							"type": "boolean"
						},
						"can_pass_doors": {
							"type": "boolean"
						},
						"can_pass_over_water": {
							"type": "boolean"
						},
						"can_pass_over_lava": {
							"type": "boolean"
						},
						"can_path_from_air": {
							"type": "boolean"
						},
						"can_sink": {
							"type": "boolean"
						},
						"can_walk_in_lava": {
							"type": "boolean"
						}
					}
				},
				"minecraft:npc": {
					"description": "Gives the entity the npc menu when interacted with.",
					"additionalProperties": false,
					"properties": {
						"npc_data": {
							"properties": {
								"portrait_offsets": {
									"properties": {
										"translate": {
											"type": "array",
											"minItems": 3,
											"maxItems": 3,
											"items": {
												"type": "number"
											}
										},
										"scale": {
											"type": "array",
											"minItems": 3,
											"maxItems": 3,
											"items": {
												"type": "number"
											}
										}
									}
								},
								"picker_offsets": {
									"properties": {
										"translate": {
											"type": "array",
											"minItems": 3,
											"maxItems": 3,
											"items": {
												"type": "number"
											}
										},
										"scale": {
											"type": "array",
											"minItems": 3,
											"maxItems": 3,
											"items": {
												"type": "number"
											}
										}
									}
								},
								"skin_list": {
									"type": "array",
									"items": {
										"properties": {
											"variant": {
												"type": "number"
											}
										}
									}
								}
							}
						}
					}
				},
				"minecraft:on_death": {
					"description": "Triggers an event upon the entity's death.",
					"$ref": "../general/eventDefinition.json"
				},
				"minecraft:on_friendly_anger": {
					"description": "Adds a trigger that will run when a nearby entity of the same type as this entity becomes angry.",
					"$ref": "../general/eventDefinition.json"
				},
				"minecraft:on_hurt": {
					"description": "Adds a trigger to call when this entity takes damage.",
					"$ref": "../general/eventDefinition.json"
				},
				"minecraft:on_hurt_by_player": {
					"description": "Adds a trigger to call when this entity is attacked by the player.",
					"$ref": "../general/eventDefinition.json"
				},
				"minecraft:on_ignite": {
					"description": "Adds a trigger to call when this entity is set on fire.",
					"$ref": "../general/eventDefinition.json"
				},
				"minecraft:on_start_landing": {
					"description": "Only usable by the Ender Dragon. Adds a trigger to call when this entity lands.",
					"$ref": "../general/eventDefinition.json"
				},
				"minecraft:on_start_takeoff": {
					"description": "Only usable by the Ender Dragon. Adds a trigger to call when this entity starts flying.",
					"$ref": "../general/eventDefinition.json"
				},
				"minecraft:on_target_acquired": {
					"description": "Adds a trigger to call when this entity finds a target.",
					"$ref": "../general/eventDefinition.json"
				},
				"minecraft:on_target_escape": {
					"description": "Adds a trigger to call when this entity loses the target it currently has.",
					"$ref": "../general/eventDefinition.json"
				},
				"minecraft:on_wake_with_owner": {
					"description": "Adds a trigger to call when this pet's owner awakes after sleeping with the pet.",
					"$ref": "../general/eventDefinition.json"
				},
				"minecraft:peek": {
					"description": "Defines the entity's 'peek' behavior, defining the events that should be called during it.",
					"additionalProperties": false,
					"properties": {
						"on_open": {
							"$ref": "../general/eventDefinition.json"
						},
						"on_close": {
							"$ref": "../general/eventDefinition.json"
						},
						"on_target_open": {
							"$ref": "../general/eventDefinition.json"
						}
					}
				},
				"minecraft:persistent": {
					"description": "Defines whether an entity should be persistent in the game world.",
					"additionalProperties": false
				},
				"minecraft:physics": {
					"description": "Defines physics properties of an actor, including if it is affected by gravity or if it collides with objects.",
					"additionalProperties": false,
					"properties": {
						"has_collision": {
							"type": "boolean"
						},
						"has_gravity": {
							"type": "boolean"
						}
					}
				},
				"minecraft.player:saturation": {
					"description": "Defines the player's saturation.",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "number"
						},
						"min": {
							"type": "number"
						},
						"max": {
							"type": "number"
						}
					}
				},
				"minecraft.player:exhaustion": {
					"description": "Defines the player's exhaustion.",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "number"
						},
						"min": {
							"type": "number"
						},
						"max": {
							"type": "number"
						}
					}
				},
				"minecraft.player:level": {
					"description": "Defines the player's level.",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "number"
						},
						"min": {
							"type": "number"
						},
						"max": {
							"type": "number"
						}
					}
				},
				"minecraft.player:experience": {
					"description": "Defines the player's experience.",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "number"
						},
						"min": {
							"type": "number"
						},
						"max": {
							"type": "number"
						}
					}
				},
				"minecraft:pushable": {
					"description": "Defines what can push an entity between other entities and pistons.",
					"additionalProperties": false,
					"properties": {
						"is_pushable": {
							"type": "boolean"
						},
						"is_pushable_by_piston": {
							"type": "boolean"
						}
					}
				},
				"minecraft:push_through": {
					"description": "Sets the distance through which the entity can push through.",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "number"
						}
					}
				},
				"minecraft:preferred_path": {
					"description": "Specifies costing information for mobs that prefer to walk on preferred paths.",
					"additionalProperties": false,
					"properties": {
						"max_fall_blocks": {
							"type": "number"
						},
						"jump_cost": {
							"type": "number"
						},
						"default_block_cost": {
							"type": "number"
						},
						"preferred_path_blocks": {
							"type": "array",
							"items": {
								"properties": {
									"cost": {
										"type": "number"
									},
									"blocks": {
										"type": "array",
										"items": {
											"$ref": "../../general/vanilla/identifiers.json#/definitions/block_identifiers"
										}
									}
								}
							}
						}
					}
				},
				"minecraft:projectile": {
					"description": "Allows the entity to be a thrown entity.",
					"additionalProperties": false,
					"properties": {
						"on_hit": {
							"properties": {
								"definition_event": {
									"properties": {
										"affect_projectile": {
											"type": "boolean"
										},
										"affect_shooter": {
											"type": "boolean"
										},
										"affect_target": {
											"type": "boolean"
										},
										"affect_splash_area": {
											"type": "boolean"
										},
										"splash_area": {
											"type": "number"
										},
										"event_trigger": {
											"$ref": "../general/eventDefinition.json"
										}
									}
								},
								"grant_xp": {
									"properties": {
										"minXP": {
											"type": "number"
										},
										"maxXP": {
											"type": "number"
										},
										"xp": {
											"type": "number"
										}
									}
								},
								"spawn_aoe_cloud": {
									"properties": {
										"radius": {
											"type": "number"
										},
										"radius_on_use": {
											"type": "number"
										},
										"potion": {
											"type": "integer",
											"minimum": 0,
											"maximum": 41
										},
										"particle": {
											"$ref": "../../general/particleName.json"
										},
										"duration": {
											"type": "number"
										},
										"color": {
											"type": "array",
											"minItems": 3,
											"maxItems": 3,
											"items": {
												"type": "number"
											}
										},
										"affect_owner": {
											"type": "boolean"
										},
										"reapplication_delay": {
											"type": "number"
										}
									}
								},
								"impact_damage": {
									"properties": {
										"filter": {
											"$ref": "../../molang/embeddedBeta.json"
										},
										"damage": {
											"type": "array",
											"minItems": 2,
											"maxItems": 2,
											"items": {
												"type": "number"
											}
										},
										"knockback": {
											"type": "boolean"
										},
										"semi_random_diff_damage": {
											"type": "boolean"
										},
										"destroy_on_hit": {
											"type": "boolean"
										},
										"max_critical_damage": {
											"type": "number"
										},
										"min_critical_damage": {
											"type": "number"
										},
										"power_multiplier": {
											"type": "number"
										},
										"should_bounce": {
											"type": "boolean"
										},
										"channeling": {
											"type": "boolean"
										},
										"set_last_hurt_requires_damage": {
											"type": "boolean"
										},
										"destroy_on_hit_requres_damage": {
											"type": "boolean"
										}
									}
								},
								"spawn_chance": {
									"properties": {
										"first_spawn_percent_chance": {
											"type": "number"
										},
										"first_spawn_chance": {
											"type": "number"
										},
										"second_spawn_percent_chance": {
											"type": "number"
										},
										"second_spawn_chance": {
											"type": "number"
										},
										"first_spawn_count": {
											"type": "number"
										},
										"second_spawn_count": {
											"type": "number"
										},
										"spawn_mob": {
											"type": "string"
										},
										"spawn_definition": {
											"$ref": "../../general/vanilla/identifiers.json#/definitions/entity_identifiers"
										},
										"spawn_baby": {
											"type": "boolean"
										}
									}
								},
								"mob_effect": {
									"properties": {
										"effect": {
											"$ref": "../../general/vanilla/effectName.json"
										},
										"duration": {
											"type": "number"
										},
										"duration_easy": {
											"type": "number"
										},
										"duration_normal": {
											"type": "number"
										},
										"duration_hard": {
											"type": "number"
										},
										"amplifier": {
											"type": "number"
										}
									}
								},
								"stick_in_ground": {
									"properties": {
										"shake_time": {
											"type": "number"
										}
									}
								},
								"thrown_potion_effect": {
									"additionalProperties": false
								},
								"douse_fire": {
									"additionalProperties": false
								},
								"arrow_effect": {
									"additionalProperties": false
								},
								"remove_on_hit": {
									"additionalProperties": false
								},
								"teleport_owner": {
									"additionalProperties": false
								},
								"particle_on_hit": {
									"properties": {
										"particle_type": {
											"$ref": "../../general/particleName.json"
										},
										"num_particles": {
											"type": "number"
										},
										"on_entity_hit": {
											"type": "boolean"
										},
										"on_other_hit": {
											"type": "boolean"
										}
									}
								},
								"catch_fire": {
									"properties": {
										"fire_affected_by_griefing": {
											"type": "boolean"
										}
									}
								}
							}
						},
						"shoot_sound": {
							"type": "string"
						},
						"hit_sound": {
							"type": "string"
						},
						"hit_ground_sound": {
							"type": "string"
						},
						"is_dangerous": {
							"type": "boolean"
						},
						"inertia": {
							"type": "number"
						},
						"liquid_inertia": {
							"type": "number"
						},
						"power": {
							"type": "number"
						},
						"gravity": {
							"type": "number"
						},
						"uncertainty": {
							"type": "number"
						},
						"uncertainty_multiplier": {
							"type": "number"
						},
						"anchor": {
							"type": "number"
						},
						"angleoffset": {
							"type": "number"
						},
						"semi_random_diff_damage": {
							"type": "boolean"
						},
						"shoot_target": {
							"type": "boolean"
						},
						"stop_on_hurt": {
							"type": "boolean"
						},
						"multiple_targets": {
							"type": "boolean"
						},
						"should_bounce": {
							"type": "boolean"
						},
						"reflect_on_hurt": {
							"type": "boolean"
						},
						"catch_fire": {
							"type": "boolean"
						},
						"offset": {
							"type": "array",
							"minItems": 3,
							"maxItems": 3,
							"items": {
								"type": "number"
							}
						},
						"homing": {
							"type": "boolean"
						}
					}
				},
				"minecraft:raid_trigger": {
					"description": "Attempts to trigger a raid at the entity's location.",
					"additionalProperties": false,
					"properties": {
						"triggered_event": {
							"$ref": "../general/eventDefinition.json"
						}
					}
				},
				"minecraft:rail_movement": {
					"description": "Defines the entity's movement on the rails. An entity with this component is only allowed to move on the rail.",
					"additionalProperties": false,
					"properties": {
						"max_speed": {
							"type": "number"
						}
					}
				},
				"minecraft:rail_sensor": {
					"description": "Triggers based on rail conditions",
					"additionalProperties": false,
					"properties": {
						"check_block_types": {
							"type": "boolean"
						},
						"eject_on_activate": {
							"type": "boolean"
						},
						"eject_on_deactivate": {
							"type": "boolean"
						},
						"on_activate": {
							"$ref": "../general/eventDefinition.json"
						},
						"on_deactivate": {
							"$ref": "../general/eventDefinition.json"
						},
						"tick_command_block_on_activate": {
							"type": "boolean"
						},
						"tick_command_block_on_deactivate": {
							"type": "boolean"
						}
					}
				},
				"minecraft:ravager_blocked": {
					"description": "Defines the ravager's response to their melee attack being blocked.",
					"additionalProperties": false,
					"properties": {
						"knockback_strength": {
							"type": "number"
						},
						"reaction_choices": {
							"type": "array",
							"items": {
								"properties": {
									"weight": {
										"type": "number"
									},
									"value": {
										"$ref": "../general/eventDefinition.json"
									}
								}
							}
						}
					}
				},
				"minecraft:rideable": {
					"description": "Determines whether this entity can be ridden. Allows specifying the different seat positions and quantity.",
					"additionalProperties": false,
					"properties": {
						"controlling_seat": {
							"type": "number"
						},
						"crouching_skip_interact": {
							"type": "boolean"
						},
						"family_types": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"interact_text": {
							"type": "string"
						},
						"pull_in_entities": {
							"type": "boolean"
						},
						"rider_can_interact": {
							"type": "boolean"
						},
						"seat_count": {
							"type": "number"
						},
						"seats": {
							"type": "array",
							"items": {
								"properties": {
									"lock_rider_rotation": {
										"$ref": "../../general/degree.json"
									},
									"max_rider_count": {
										"type": "number"
									},
									"min_rider_count": {
										"type": "number"
									},
									"position": {
										"type": "array",
										"minItems": 3,
										"maxItems": 3,
										"items": {
											"type": "number"
										}
									},
									"rotate_rider_by": {
										"anyOf": [
											{
												"$ref": "../../general/degree.json"
											},
											{
												"$ref": "../../molang/embeddedBeta.json"
											}
										]
									}
								}
							}
						}
					}
				},
				"minecraft:scaffolding_climber": {
					"description": "Allows the player to detect and manuever on the scaffolding block.",
					"additionalProperties": false
				},
				"minecraft:scale": {
					"description": "Sets the entity's visual size.",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "number"
						}
					}
				},
				"minecraft:scale_by_age": {
					"description": "Defines the entity's size interpolation based on the entity's age.",
					"additionalProperties": false,
					"properties": {
						"start_scale": {
							"type": "number"
						},
						"end_scale": {
							"type": "number"
						}
					}
				},
				"minecraft:scheduler": {
					"description": "Fires off scheduled mob events at time of day events.",
					"additionalProperties": false,
					"properties": {
						"min_delay_secs": {
							"type": "number"
						},
						"max_delay_secs": {
							"type": "number"
						},
						"scheduled_events": {
							"type": "array",
							"items": {
								"$ref": "../general/eventDefinition.json"
							}
						}
					}
				},
				"minecraft:shareables": {
					"description": "Defines a list of items the mob wants to share or pick up.",
					"additionalProperties": false,
					"properties": {
						"all_items": {
							"type": "boolean"
						},
						"all_items_max_amount": {
							"type": "number"
						},
						"all_items_surplus_amount": {
							"type": "number"
						},
						"all_items_want_amount": {
							"type": "number"
						},
						"items": {
							"type": "array",
							"items": {
								"properties": {
									"priority": {
										"type": "number"
									},
									"item": {
										"$ref": "../../general/vanilla/identifiers.json#/definitions/item_identifiers"
									},
									"item_aux": {
										"type": "number"
									},
									"craft_into": {
										"$ref": "../../general/vanilla/identifiers.json#/definitions/item_identifiers"
									},
									"max_amount": {
										"type": "number"
									},
									"want_amount": {
										"type": "number"
									},
									"surplus_amount": {
										"type": "number"
									},
									"pickup_limit": {
										"type": "number"
									},
									"admire": {
										"type": "boolean"
									},
									"barter": {
										"type": "boolean"
									},
									"consume_item": {
										"type": "boolean"
									},
									"stored_in_inventory": {
										"type": "boolean"
									}
								}
							}
						}
					}
				},
				"minecraft:shooter": {
					"description": "Defines the entity's ranged attack behavior.",
					"additionalProperties": false,
					"properties": {
						"def": {
							"$ref": "../../general/vanilla/identifiers.json#/definitions/entity_identifiers"
						},
						"aux_val": {
							"type": "integer",
							"minimum": 0,
							"maximum": 41
						}
					}
				},
				"minecraft:sittable": {
					"description": "Defines the entity's 'sit' state.",
					"additionalProperties": false,
					"properties": {
						"sit_event": {
							"$ref": "../general/eventDefinition.json"
						},
						"stand_event": {
							"$ref": "../general/eventDefinition.json"
						}
					}
				},
				"minecraft:sound_volume": {
					"description": "Sets the entity's base volume for sound effects.",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "number"
						}
					}
				},
				"minecraft:spawn_entity": {
					"description": "Adds a timer after which this entity will spawn another entity or item (similar to vanilla's chicken's egg-laying behavior).",
					"additionalProperties": false,
					"properties": {
						"entities": {
							"type": "array",
							"items": {
								"properties": {
									"should_leash": {
										"type": "boolean"
									},
									"num_to_spawn": {
										"type": "number"
									},
									"min_wait_time": {
										"type": "number"
									},
									"max_wait_time": {
										"type": "number"
									},
									"spawn_entity": {
										"$ref": "../../general/vanilla/identifiers.json#/definitions/entity_identifiers"
									},
									"spawn_event": {
										"type": "string"
									},
									"spawn_item": {
										"$ref": "../../general/vanilla/identifiers.json#/definitions/item_identifiers"
									},
									"spawn_method": {
										"type": "string",
										"const": "born"
									},
									"spawn_sound": {
										"type": "string"
									},
									"filters": {
										"$ref": "../general/filter.json"
									},
									"single_use": {
										"type": "boolean"
									}
								}
							}
						}
					}
				},
				"minecraft:spell_effects": {
					"description": "Defines what mob effects to add and remove to the entity when adding this component.",
					"additionalProperties": false,
					"properties": {
						"add_effects": {
							"type": "array",
							"items": {
								"$ref": "../../general/effectDefinition.json"
							}
						},
						"remove_effects": {
							"type": "array",
							"items": {
								"$ref": "../../general/vanilla/effectName.json"
							}
						}
					}
				},
				"minecraft:strength": {
					"description": "Defines the entity's strength to carry items.",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "number"
						},
						"max": {
							"type": "number"
						},
						"min": {
							"type": "number"
						}
					}
				},
				"minecraft:tameable": {
					"description": "Defines the rules for a mob to be tamed by the player.",
					"additionalProperties": false,
					"properties": {
						"probability": {
							"type": "number"
						},
						"tame_items": {
							"type": "array",
							"items": {
								"$ref": "../../general/vanilla/identifiers.json#/definitions/item_identifiers"
							}
						},
						"tame_event": {
							"$ref": "../general/eventDefinition.json"
						}
					}
				},
				"minecraft:tamemount": {
					"description": "Allows the Entity to be tamed by mounting it.",
					"properties": {
						"attempt_temper_mod": {
							"type": "number"
						},
						"auto_reject_items": {
							"type": "array",
							"properties": {
								"item": {
									"anyOf": [
										{
											"$ref": "../../general/vanilla/identifiers.json#/definitions/item_identifiers"
										}
									]
								}
							}
						},
						"feed_items": {
							"type": "array",
							"properties": {
								"item": {
									"anyOf": [
										{
											"$ref": "../../general/vanilla/identifiers.json#/definitions/item_identifiers"
										}
									]
								},
								"temper_mod": {
									"type": "number"
								}
							}
						},
						"feed_text": {
							"type": "string"
						},
						"min_temper": {
							"type": "number"
						},
						"max_temper": {
							"type": "number"
						},
						"ride_text": {
							"type": "string"
						},
						"tame_event": {
							"$ref": "../general/eventDefinition.json"
						}
					}
				},
				"minecraft:target_nearby_sensor": {
					"description": "Defines the entity's range within which it can see or sense other entities to target them.",
					"additionalProperties": false,
					"properties": {
						"inside_range": {
							"type": "number"
						},
						"outside_range": {
							"type": "number"
						},
						"on_inside_range": {
							"$ref": "../general/eventDefinition.json"
						},
						"on_outside_range": {
							"$ref": "../general/eventDefinition.json"
						}
					}
				},
				"minecraft:teleport": {
					"description": "Defines an entity's teleporting behavior.",
					"additionalProperties": false,
					"properties": {
						"random_teleports": {
							"type": "boolean"
						},
						"max_random_teleport_time": {
							"type": "number"
						},
						"min_random_teleport_time": {
							"type": "number"
						},
						"random_telport_cube": {
							"type": "array",
							"minItems": 3,
							"maxItems": 3,
							"items": {
								"type": "number"
							}
						},
						"target_distance": {
							"type": "number"
						},
						"target_teleport_chance": {
							"type": "number"
						},
						"light_teleport_chance": {
							"type": "number"
						},
						"dark_teleport_chance": {
							"type": "number"
						}
					}
				},
				"minecraft:tick_world": {
					"description": "Defines if the entity ticks the world and the radius around it to tick.",
					"additionalProperties": false,
					"properties": {
						"radius": {
							"type": "number"
						},
						"distacne_to_players": {
							"type": "number"
						},
						"never_despawn": {
							"type": "boolean"
						}
					}
				},
				"minecraft:timer": {
					"description": "Adds a timer after which an event will fire.",
					"additionalProperties": false,
					"properties": {
						"looping": {
							"type": "boolean"
						},
						"randomInterval": {
							"type": "boolean"
						},
						"time": {
							"anyOf": [
								{
									"type": "number"
								},
								{
									"type": "array",
									"minItems": 2,
									"maxItems": 2,
									"items": {
										"type": "number"
									}
								}
							]
						},
						"random_time_choices": {
							"type": "array",
							"items": {
								"properties": {
									"weight": {
										"type": "number"
									},
									"value": {
										"type": "number"
									}
								}
							}
						},
						"time_down_event": {
							"$ref": "../general/eventDefinition.json"
						}
					}
				},
				"minecraft:trade_resupply": {
					"additionalProperties": false
				},
				"minecraft:trade_table": {
					"description": "Defines this entity's ability to trade with players.",
					"additionalProperties": false,
					"properties": {
						"display_name": {
							"type": "string"
						},
						"table": {
							"type": "string"
						},
						"new_screen": {
							"type": "boolean"
						},
						"hero_demand_discount": {
							"type": "number"
						},
						"persist_trades": {
							"type": "boolean"
						},
						"convert_trades_economy": {
							"type": "boolean"
						}
					}
				},
				"minecraft:trail": {
					"description": "Causes an entity to leave a trail of blocks as it moves about the world.",
					"additionalProperties": false,
					"properties": {
						"block_type": {
							"$ref": "../../general/vanilla/identifiers.json#/definitions/block_identifiers"
						},
						"spawn_filter": {
							"$ref": "../general/filter.json"
						},
						"spawn_offset": {
							"type": "array",
							"minItems": 3,
							"maxItems": 3,
							"items": {
								"type": "number"
							}
						}
					}
				},
				"minecraft:transformation": {
					"description": "Defines an entity's transformation from the current definition into another",
					"additionalProperties": false,
					"properties": {
						"into": {
							"$ref": "../../general/vanilla/identifiers.json#/definitions/entity_identifiers"
						},
						"begin_transformation_sound": {
							"type": "string"
						},
						"transformation_sound": {
							"type": "string"
						},
						"drop_equipment": {
							"type": "boolean"
						},
						"keep_owner": {
							"type": "boolean"
						},
						"keep_level": {
							"type": "boolean"
						},
						"delay": {
							"properties": {
								"value": {
									"type": "number"
								},
								"block_assist_chance": {
									"type": "number"
								},
								"block_chance": {
									"type": "number"
								},
								"block_max": {
									"type": "number"
								},
								"block_radius": {
									"type": "number"
								},
								"keep_owner": {
									"type": "boolean"
								},
								"block_types": {
									"type": "array",
									"items": {
										"$ref": "../../general/vanilla/identifiers.json#/definitions/block_identifiers"
									}
								}
							}
						}
					}
				},
				"minecraft:trusting": {
					"description": "Defines the rules for a mob to trust players.",
					"additionalProperties": false,
					"properties": {
						"probability": {
							"type": "number"
						},
						"trust_items": {
							"type": "array",
							"items": {
								"$ref": "../../general/vanilla/identifiers.json#/definitions/item_identifiers"
							}
						},
						"trust_event": {
							"$ref": "../general/eventDefinition.json"
						}
					}
				},
				"minecraft:trust": {
					"additionalProperties": false
				},
				"minecraft:type_family": {
					"description": "Defines the families this entity belongs to.",
					"additionalProperties": false,
					"properties": {
						"family": {
							"type": "array",
							"items": {
								"$ref": "../general/family.json"
							}
						}
					}
				},
				"minecraft:underwater_movement": {
					"additionalProperties": false
				},
				"minecraft:variant": {
					"description": "Used to differentiate the component group of a variant of an entity from others. (e.g. ocelot, villager)",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "integer"
						}
					}
				},
				"minecraft:walk_animation_speed": {
					"description": "Sets the speed multiplier for this entity's walk animation speed.",
					"additionalProperties": false,
					"properties": {
						"value": {
							"type": "number"
						}
					}
				},
				"minecraft:wants_jockey": {
					"description": "Sets that this entity wants to become a jockey.",
					"additionalProperties": false
				},
				"minecraft:water_movement": {
					"description": "Sets the entity's movement speed in water.",
					"additionalProperties": false,
					"properties": {
						"drag_factor": {
							"type": "number"
						}
					}
				}
			}
		},
		{
			"$ref": "./annotations.json"
		},
		{
			"$ref": "./behaviors.json"
		}
	]
}
